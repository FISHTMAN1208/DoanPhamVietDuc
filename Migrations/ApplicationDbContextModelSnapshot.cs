// <auto-generated />
using System;
using DoanPhamVietDuc.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DoanPhamVietDuc.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DoanPhamVietDuc.Models.Account", b =>
                {
                    b.Property<int>("AccountID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AccountID"));

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastLogin")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("StaffID")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("AccountID");

                    b.HasIndex("StaffID");

                    b.ToTable("Accounts");

                    b.HasData(
                        new
                        {
                            AccountID = 1,
                            CreatedBy = "Phạm Việt Đức",
                            CreatedDate = new DateTime(2025, 6, 4, 15, 56, 25, 980, DateTimeKind.Local).AddTicks(5357),
                            Password = "123456",
                            Role = "Admin",
                            StaffID = 1,
                            Status = "Active",
                            Username = "phamvietduc123"
                        },
                        new
                        {
                            AccountID = 2,
                            CreatedBy = "Hoàng Thu Hiền",
                            CreatedDate = new DateTime(2025, 6, 4, 15, 56, 25, 980, DateTimeKind.Local).AddTicks(5361),
                            Password = "19062003",
                            Role = "Staff",
                            StaffID = 2,
                            Status = "Inactive",
                            Username = "chemchem123"
                        });
                });

            modelBuilder.Entity("DoanPhamVietDuc.Models.Book", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BookCoverTypeID")
                        .HasColumnType("int");

                    b.Property<int>("CategoryID")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("ISBNCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LanguageID")
                        .HasColumnType("int");

                    b.Property<string>("ModifyBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifyTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("PageCount")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("PublishTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("PublisherName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("SupplierID")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.HasIndex("BookCoverTypeID");

                    b.HasIndex("CategoryID");

                    b.HasIndex("LanguageID");

                    b.HasIndex("SupplierID");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Author = "Nguyễn Nhật Ánh",
                            BookCoverTypeID = 1,
                            CategoryID = 1,
                            Description = "Mắt biếc là một tác phẩm của nhà văn Nguyễn Nhật Ánh...",
                            ISBNCode = "978-604-1-12345-6",
                            ImageUrl = "/Images/mat-biec.jpg",
                            LanguageID = 1,
                            ModifyBy = "Admin",
                            ModifyTime = new DateTime(2025, 6, 4, 15, 56, 25, 980, DateTimeKind.Local).AddTicks(5328),
                            PageCount = 300,
                            Price = 85000m,
                            PublishTime = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PublisherName = "NXB Kim Đồng",
                            Quantity = 100,
                            SupplierID = 1,
                            Title = "Mắt biếc"
                        });
                });

            modelBuilder.Entity("DoanPhamVietDuc.Models.BookCoverType", b =>
                {
                    b.Property<int>("BookCoverTypeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookCoverTypeID"));

                    b.Property<string>("BookCoverTypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BookCoverTypeID");

                    b.ToTable("BookCoverTypes");

                    b.HasData(
                        new
                        {
                            BookCoverTypeID = 1,
                            BookCoverTypeName = "Bìa cứng"
                        },
                        new
                        {
                            BookCoverTypeID = 2,
                            BookCoverTypeName = "Bìa mềm"
                        });
                });

            modelBuilder.Entity("DoanPhamVietDuc.Models.Category", b =>
                {
                    b.Property<int>("CategoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryID"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifyBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifyTime")
                        .HasColumnType("datetime2");

                    b.HasKey("CategoryID");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryID = 1,
                            CategoryName = "Văn học",
                            ModifyBy = "Phạm Việt Đức",
                            ModifyTime = new DateTime(2025, 6, 4, 15, 56, 25, 980, DateTimeKind.Local).AddTicks(5092)
                        },
                        new
                        {
                            CategoryID = 2,
                            CategoryName = "Kinh tế",
                            ModifyBy = "Hoàng Thu Hiền",
                            ModifyTime = new DateTime(2025, 6, 4, 15, 56, 25, 980, DateTimeKind.Local).AddTicks(5095)
                        },
                        new
                        {
                            CategoryID = 3,
                            CategoryName = "Kỹ năng sống",
                            ModifyBy = "Nguyễn Việt Anh",
                            ModifyTime = new DateTime(2025, 6, 4, 15, 56, 25, 980, DateTimeKind.Local).AddTicks(5096)
                        });
                });

            modelBuilder.Entity("DoanPhamVietDuc.Models.Import", b =>
                {
                    b.Property<int>("ImportID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ImportID"));

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ImportDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImportStatus")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("StaffID")
                        .HasColumnType("int");

                    b.Property<int>("SupplierID")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ImportID");

                    b.HasIndex("StaffID");

                    b.HasIndex("SupplierID");

                    b.ToTable("Imports");

                    b.HasData(
                        new
                        {
                            ImportID = 1,
                            CreateBy = "Phạm Việt Đức",
                            CreateTime = new DateTime(2025, 6, 4, 15, 56, 25, 980, DateTimeKind.Local).AddTicks(5503),
                            ImportDate = new DateTime(2025, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImportStatus = "Đã nhập",
                            Notes = "Hàng loại 3, dùng để test",
                            StaffID = 1,
                            SupplierID = 1,
                            TotalAmount = 300000m
                        });
                });

            modelBuilder.Entity("DoanPhamVietDuc.Models.ImportDetail", b =>
                {
                    b.Property<int>("ImportDetailID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ImportDetailID"));

                    b.Property<int>("BookID")
                        .HasColumnType("int");

                    b.Property<int>("ImportID")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal>("Subtotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("UnitImportPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ImportDetailID");

                    b.HasIndex("BookID");

                    b.HasIndex("ImportID");

                    b.ToTable("ImportDetails");

                    b.HasData(
                        new
                        {
                            ImportDetailID = 1,
                            BookID = 1,
                            ImportID = 1,
                            Quantity = 10,
                            Subtotal = 300000m,
                            UnitImportPrice = 30000m
                        });
                });

            modelBuilder.Entity("DoanPhamVietDuc.Models.Invoice", b =>
                {
                    b.Property<int>("InvoiceID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InvoiceID"));

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("CreateTime")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomerName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CustomerPhone")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("InvoiceCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("InvoiceDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("PaymentMethod")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("StaffID")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("InvoiceID");

                    b.HasIndex("StaffID");

                    b.ToTable("Invoices");

                    b.HasData(
                        new
                        {
                            InvoiceID = 1,
                            CreateBy = "Lê Thị Thu An",
                            CreateTime = new DateTime(2025, 6, 4, 15, 56, 25, 980, DateTimeKind.Local).AddTicks(5452),
                            CustomerName = "Trương Mã Hóa",
                            CustomerPhone = "0969288214",
                            InvoiceCode = "2025-M1901",
                            InvoiceDate = new DateTime(2025, 5, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Notes = "Không có",
                            PaymentMethod = "Tiền mặt",
                            StaffID = 1,
                            Status = "Đã thanh toán",
                            TotalAmount = 720000m
                        });
                });

            modelBuilder.Entity("DoanPhamVietDuc.Models.InvoiceDetail", b =>
                {
                    b.Property<int>("InvoiceDetailID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InvoiceDetailID"));

                    b.Property<int>("BookID")
                        .HasColumnType("int");

                    b.Property<int>("InvoiceID")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal>("Subtotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("InvoiceDetailID");

                    b.HasIndex("BookID");

                    b.HasIndex("InvoiceID");

                    b.ToTable("InvoiceDetails");

                    b.HasData(
                        new
                        {
                            InvoiceDetailID = 1,
                            BookID = 1,
                            InvoiceID = 1,
                            Quantity = 3,
                            Subtotal = 720000m,
                            UnitPrice = 240000m
                        });
                });

            modelBuilder.Entity("DoanPhamVietDuc.Models.Language", b =>
                {
                    b.Property<int>("LanguageID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LanguageID"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LanguageName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LanguageID");

                    b.ToTable("Languages");

                    b.HasData(
                        new
                        {
                            LanguageID = 1,
                            Code = "vi",
                            LanguageName = "Tiếng Việt"
                        },
                        new
                        {
                            LanguageID = 2,
                            Code = "en",
                            LanguageName = "Tiếng Anh"
                        });
                });

            modelBuilder.Entity("DoanPhamVietDuc.Models.Staff", b =>
                {
                    b.Property<int>("StaffID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StaffID"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("HireDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("StaffID");

                    b.ToTable("Staffs");

                    b.HasData(
                        new
                        {
                            StaffID = 1,
                            Address = "Hà Nội",
                            BirthDate = new DateTime(2003, 2, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "lethithuan@gmail.com",
                            FullName = "Lê Thị Thu An",
                            HireDate = new DateTime(2024, 6, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "0968475213",
                            Position = "Nhân viên chính thức",
                            Status = "Đang làm"
                        },
                        new
                        {
                            StaffID = 2,
                            Address = "Hà Nội",
                            BirthDate = new DateTime(2005, 10, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "nvh@gmail.com",
                            FullName = "Nguyễn Việt Hùng",
                            HireDate = new DateTime(2023, 2, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "0356789145",
                            Position = "Nhân viên parttime",
                            Status = "Đang làm"
                        });
                });

            modelBuilder.Entity("DoanPhamVietDuc.Models.Supplier", b =>
                {
                    b.Property<int>("SupplierID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SupplierID"));

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SupplierAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SupplierEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SupplierName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SupplierPhone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TaxCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SupplierID");

                    b.ToTable("Suppliers");

                    b.HasData(
                        new
                        {
                            SupplierID = 1,
                            Status = "Active",
                            SupplierAddress = "Hà Nội",
                            SupplierEmail = "kimdong@example.com",
                            SupplierName = "NXB Kim Đồng",
                            SupplierPhone = "0123456789",
                            TaxCode = "123456789"
                        });
                });

            modelBuilder.Entity("DoanPhamVietDuc.Models.Account", b =>
                {
                    b.HasOne("DoanPhamVietDuc.Models.Staff", "Staff")
                        .WithMany("Accounts")
                        .HasForeignKey("StaffID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Staff");
                });

            modelBuilder.Entity("DoanPhamVietDuc.Models.Book", b =>
                {
                    b.HasOne("DoanPhamVietDuc.Models.BookCoverType", "BookCoverType")
                        .WithMany("Books")
                        .HasForeignKey("BookCoverTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DoanPhamVietDuc.Models.Category", "Category")
                        .WithMany("Books")
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DoanPhamVietDuc.Models.Language", "Language")
                        .WithMany("Books")
                        .HasForeignKey("LanguageID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DoanPhamVietDuc.Models.Supplier", "Supplier")
                        .WithMany("Books")
                        .HasForeignKey("SupplierID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BookCoverType");

                    b.Navigation("Category");

                    b.Navigation("Language");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("DoanPhamVietDuc.Models.Import", b =>
                {
                    b.HasOne("DoanPhamVietDuc.Models.Staff", "Staff")
                        .WithMany("Imports")
                        .HasForeignKey("StaffID")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("DoanPhamVietDuc.Models.Supplier", "Supplier")
                        .WithMany()
                        .HasForeignKey("SupplierID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Staff");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("DoanPhamVietDuc.Models.ImportDetail", b =>
                {
                    b.HasOne("DoanPhamVietDuc.Models.Book", "Book")
                        .WithMany()
                        .HasForeignKey("BookID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("DoanPhamVietDuc.Models.Import", "Import")
                        .WithMany("ImportDetails")
                        .HasForeignKey("ImportID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("Import");
                });

            modelBuilder.Entity("DoanPhamVietDuc.Models.Invoice", b =>
                {
                    b.HasOne("DoanPhamVietDuc.Models.Staff", "Staff")
                        .WithMany("Invoices")
                        .HasForeignKey("StaffID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Staff");
                });

            modelBuilder.Entity("DoanPhamVietDuc.Models.InvoiceDetail", b =>
                {
                    b.HasOne("DoanPhamVietDuc.Models.Book", "Book")
                        .WithMany()
                        .HasForeignKey("BookID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DoanPhamVietDuc.Models.Invoice", "Invoice")
                        .WithMany("InvoiceDetails")
                        .HasForeignKey("InvoiceID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("Invoice");
                });

            modelBuilder.Entity("DoanPhamVietDuc.Models.BookCoverType", b =>
                {
                    b.Navigation("Books");
                });

            modelBuilder.Entity("DoanPhamVietDuc.Models.Category", b =>
                {
                    b.Navigation("Books");
                });

            modelBuilder.Entity("DoanPhamVietDuc.Models.Import", b =>
                {
                    b.Navigation("ImportDetails");
                });

            modelBuilder.Entity("DoanPhamVietDuc.Models.Invoice", b =>
                {
                    b.Navigation("InvoiceDetails");
                });

            modelBuilder.Entity("DoanPhamVietDuc.Models.Language", b =>
                {
                    b.Navigation("Books");
                });

            modelBuilder.Entity("DoanPhamVietDuc.Models.Staff", b =>
                {
                    b.Navigation("Accounts");

                    b.Navigation("Imports");

                    b.Navigation("Invoices");
                });

            modelBuilder.Entity("DoanPhamVietDuc.Models.Supplier", b =>
                {
                    b.Navigation("Books");
                });
#pragma warning restore 612, 618
        }
    }
}
